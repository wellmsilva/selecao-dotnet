// <auto-generated />
using System;
using Indra.SelecaoDotNet.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Indra.SelecaoDotNet.Infra.Data.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Cartao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Codigo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Padrao")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Usuario_Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Curso");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a804f206-0af7-4870-ab49-923a26f52cd2"),
                            Nome = "Curso básico de Python",
                            Preco = 10.0
                        },
                        new
                        {
                            Id = new Guid("bab465a5-4985-4170-b83e-ec582e63114a"),
                            Nome = "Curso avançado de Python",
                            Preco = 25.0
                        },
                        new
                        {
                            Id = new Guid("0fed05e1-3bc9-49c8-a8bc-e110816f1d40"),
                            Nome = "Curso básico de Asp.Net Core",
                            Preco = 10.0
                        },
                        new
                        {
                            Id = new Guid("36d63982-f542-4f5c-8d58-ee90fae9efa1"),
                            Nome = "Curso básico de  UX",
                            Preco = 15.0
                        },
                        new
                        {
                            Id = new Guid("6c3701f3-31e6-4064-a4e2-067e9e9557b6"),
                            Nome = "Curso completo de VueJS",
                            Preco = 25.0
                        });
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Curso_Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Pagamento_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Usuario_Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Curso_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CartaoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Cartao_Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Matricula_Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Usuario_Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("Matricula_Id")
                        .IsUnique();

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Cartao", b =>
                {
                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Cartoes")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Matricula", b =>
                {
                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("Curso_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Matriculas")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Indra.SelecaoDotNet.Dominio.Entities.Pagamento", b =>
                {
                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId");

                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Matricula", "Matricula")
                        .WithOne("Pagamento")
                        .HasForeignKey("Indra.SelecaoDotNet.Dominio.Entities.Pagamento", "Matricula_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Indra.SelecaoDotNet.Dominio.Entities.Usuario", "Usuario")
                        .WithMany("Pagamentos")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
